import { Stack, Typography } from '@mui/material';
import { useSelector } from 'react-redux';
import { format } from 'date-fns';

const DetailItem = ({ label, value }) => (
    <Stack direction="row" spacing={2} sx={{ py: 1 }}>
        <Typography
            sx={{
                minWidth: 120,
                maxWidth: 120,
                color: 'text.secondary',
                fontSize: '1.4rem',
                wordWrap: 'break-word',
                whiteSpace: 'normal',
                flexShrink: 1,
            }}
        >
            {label}:
        </Typography>
        <Typography
            sx={{
                fontSize: '1.4rem',
                flex: 1,
                wordWrap: 'break-word',
            }}
        >
            {value}
        </Typography>
    </Stack>
);

export default function ExpressDeliveryDetail() {
    const requestDetail = useSelector((state) => state.requestDetail.requestDetailvalue);

    // Safe access to express delivery data
    const expressData = requestDetail?.expressDeliveryRequest;

    // Format functions
    const formatDate = (dateString) => {
        if (!dateString) return '-';
        try {
            return format(new Date(dateString), 'dd/MM/yyyy');
        } catch {
            return dateString;
        }
    };

    const getDeliveryMethodLabel = (method) => {
        const methodLabels = {
            'G·ª≠i th√¥ng th∆∞·ªùng': 'üìÆ G·ª≠i th√¥ng th∆∞·ªùng',
            'G·ª≠i h·ªèa t·ªëc': '‚ö° G·ª≠i h·ªèa t·ªëc',
            'G·ª≠i ƒë·∫£m b·∫£o': 'üõ°Ô∏è G·ª≠i ƒë·∫£m b·∫£o',
            'G·ª≠i ƒëi n∆∞·ªõc ngo√†i': 'üåç G·ª≠i ƒëi n∆∞·ªõc ngo√†i',
        };
        return methodLabels[method] || method || '-';
    };

    const getItemTypeLabel = (type) => {
        const typeLabels = {
            'Gi·∫•y t·ªù': 'üìÑ Gi·∫•y t·ªù',
            'H√†ng ho√° kh√¥ng ph·∫£i ch·∫•t l·ªèng': 'üì¶ H√†ng ho√° kh√¥ng ph·∫£i ch·∫•t l·ªèng',
            'H√†ng Ho√° l√† ch·∫•t l·ªèng': 'üß¥ H√†ng Ho√° l√† ch·∫•t l·ªèng',
        };
        return typeLabels[type] || type || '-';
    };

    const getWeightLabel = (weight) => {
        const weightLabels = {
            'D∆∞·ªõi 1kg': '‚öñÔ∏è D∆∞·ªõi 1kg',
            'T·ª´ 1kg - d∆∞·ªõi 3kg': '‚öñÔ∏è T·ª´ 1kg - d∆∞·ªõi 3kg',
            'T·ª´ 3kg - d∆∞·ªõi 5kg': '‚öñÔ∏è T·ª´ 3kg - d∆∞·ªõi 5kg',
            'Tr√™n 5kg': '‚öñÔ∏è Tr√™n 5kg',
        };
        return weightLabels[weight] || weight || '-';
    };

    if (!expressData) {
        return (
            <Typography sx={{ fontSize: '1.4rem', color: 'text.secondary' }}>
                Kh√¥ng c√≥ th√¥ng tin chuy·ªÉn ph√°t nhanh
            </Typography>
        );
    }

    return (
        <>
            <DetailItem label="Lo·∫°i h√†ng h√≥a" value={getItemTypeLabel(expressData.item_type)} />

            <DetailItem label="Tr·ªçng l∆∞·ª£ng" value={getWeightLabel(expressData.item_weight)} />

            <DetailItem label="H√¨nh th·ª©c v·∫≠n chuy·ªÉn" value={getDeliveryMethodLabel(expressData.delivery_method)} />

            {/* Ch·ªâ hi·ªÉn th·ªã khi l√† "G·ª≠i h·ªèa t·ªëc" */}
            {expressData.delivery_method === 'G·ª≠i h·ªèa t·ªëc' && (
                <>
                    <DetailItem label="L√Ω do g·ª≠i h·ªèa t·ªëc" value={expressData.express_reason || '-'} />

                    <DetailItem label="Ng√†y mong mu·ªën nh·∫≠n" value={formatDate(expressData.expected_receive_date)} />
                </>
            )}

            <DetailItem label="ƒê∆°n v·ªã nh·∫≠n" value={expressData.receiving_unit || '-'} />

            <DetailItem label="ƒê·ªãa ch·ªâ nh·∫≠n" value={expressData.receiving_address || '-'} />

            <DetailItem label="T√™n ng∆∞·ªùi nh·∫≠n" value={expressData.recipient_name || '-'} />

            <DetailItem label="S·ªë ƒëi·ªán tho·∫°i ng∆∞·ªùi nh·∫≠n" value={expressData.recipient_phone || '-'} />

            <DetailItem label="Ng√†y t·∫°o" value={formatDate(expressData.created_at)} />
        </>
    );
}
